{
  "name": "pure-react-carousel",
  "version": "2.0.0-rc.0",
  "description": "A highly impartial suite of React components that can be assembled by the consumer to create a responsive and aria compliant carousel with almost no limits on DOM structure or CSS styles.",
  "main": "dist/index.cjs.js",
  "module": "dist/index.es.js",
  "jsnext:main": "dist/index.es.js",
  "files": [
    "dist/**/*",
    "typings/**/*"
  ],
  "keywords": [
    "react",
    "carousel",
    "aria",
    "responsive",
    "accessibility",
    "accessible"
  ],
  "scripts": {
    "commit": "git-cz",
    "commit:add": "git add .",
    "commit:all": "npm run commit:add && npm run commit",
    "test": "BABEL_ENV=test jest --no-cache",
    "test:coverage": "BABEL_ENV=test jest --coverage --no-cache",
    "test:watch": "BABEL_ENV=test jest --watch",
    "start": "check-node-version --node $(cat .nvmrc) && NODE_ENV=development rollup -w -c rollup.config.dev.js",
    "lint": "eslint . --ext .js --ext .jsx --ignore-path .gitignore",
    "lint:fix": "eslint ./src --fix --ext .js --ext .jsx --ignore-path .gitignore",
    "prebuild": "rimraf dist",
    "build": "check-node-version --node $(cat .nvmrc) && NODE_ENV=production rollup -c rollup.config.cjs.js && NODE_ENV=production rollup -c rollup.config.es.js",
    "build:commonjs": "check-node-version --node $(cat .nvmrc) && NODE_ENV=production rollup -c rollup.config.cjs.js",
    "build:es": "check-node-version --node $(cat .nvmrc) && NODE_ENV=production rollup -c rollup.config.es.js",
    "postbuild": "node postbuild.js",
    "build:watch": "check-node-version --node $(cat .nvmrc) && watch 'npm run build' src",
    "prepublishOnly": "check-node-version --node $(cat .nvmrc) && npm run build",
    "semantic-release": "semantic-release",
    "predeploy": "check-node-version --node $(cat .nvmrc) && rimraf dev/script && NODE_ENV=development rollup -c rollup.config.dev.js",
    "deploy": "check-node-version --node $(cat .nvmrc) && gh-pages -d dev",
    "true-level": "check-node-version --node $(cat .nvmrc) && rm -rf ./node_modules ./.babel-cache; npm install"
  },
  "typings": "typings/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/express-labs/pure-react-carousel.git"
  },
  "author": "Matthew Toledo",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/express-labs/pure-react-carousel"
  },
  "homepage": "https://github.com/express-labs/pure-react-carousel#readme",
  "devDependencies": {
    "@eslint/js": "^9.13.0",
    "eslint": "^9.13.0",
    "eslint-plugin-react": "^7.37.2",
    "gh-pages": "^6.2.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.3.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "rimraf": "^6.0.1",
    "sass": "^1.80.4",
    "typescript": "^5.6.3",
    "typescript-eslint": "^8.11.0",
    "waait": "^1.0.5",
    "webpack": "^5.95.0"
  },
  "peerDependencies": {
    "react": "17.x || 18.x",
    "react-dom": "17.x || 18.x"
  },
  "dependencies": {
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
      "\\.(css|scss)$": "identity-obj-proxy"
    },
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/dev/",
      "<rootDir>/dist/"
    ],
    "testMatch": [
      "**/__tests__/**.test.js?(x)"
    ],
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "src/**/*.jsx"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/dev/",
      "/dist/",
      "/src/App/examples/"
    ],
    "coverageReporters": [
      "text",
      "json",
      "json-summary",
      "lcov"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 95,
        "lines": 95,
        "statements": 95
      }
    },
    "setupFiles": [
      "raf/polyfill"
    ],
    "testEnvironmentOptions": {
      "resources": "usable"
    }
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "es5"
  }
}
